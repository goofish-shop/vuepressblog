(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{286:function(a,t,r){"use strict";r.r(t);var s=r(10),v=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"gridmemo如何使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gridmemo如何使用"}},[a._v("#")]),a._v(" GridMemo如何使用？")]),a._v(" "),t("h2",{attrs:{id:"创作格子-如何把知识装入格子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创作格子-如何把知识装入格子"}},[a._v("#")]),a._v(" 创作格子——如何把知识装入格子？")]),a._v(" "),t("p",[a._v("认知科学中有一个简单道理，知识记住时越困难、提取起来越容易。\n与其他记忆软件提供各种辅助功能直接将要记忆的知识内容整理成卡片有所不同，GridMemo主张所有的知识点都应该经过一个学习者自己主动分析整理的过程，我们称之为“创作格子”。这个过程提高了初期的难度，但却可以极大的降低后续复习的工作量。而且由于格子是学习者自己创作的，对于自己的创作人往往会有更深刻的情感联系，更愿意去不断地品位和推敲，进一步降低了后续复习时的抵触情绪。\n在创作格子时需要注意以下几点：")]),a._v(" "),t("h3",{attrs:{id:"数量限制-不超五个"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数量限制-不超五个"}},[a._v("#")]),a._v(" 数量限制——不超五个")]),a._v(" "),t("p",[a._v("人类的工作记忆有限，通常在3-5之间，一次性要记住的知识点如果超过工作记忆的数量，大脑就会难以同时处理这些知识点，记忆效果因而变差。GridMemo通过虽然九宫格将知识点要素的数量限制在9个以下，但学习者会本能的想把九宫格填满，这样会降低学习和复习的效率。最佳的格子数量是3-5个。一次性要记住的东西越少，大脑感受到的压力越小，记忆效果就越好。如何将格子数量控制在5个以下呢？")]),a._v(" "),t("h4",{attrs:{id:"去粗取精"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#去粗取精"}},[a._v("#")]),a._v(" 去粗取精")]),a._v(" "),t("p",[a._v("学习者要主动过滤知识点中相对不重要的内容，只保留最重要3-5个要素。不要试图记住全部内容，记住一个知识的最重要3个要素就能够应付90%以上的实际问题了，想要记得越多记忆效果越差。")]),a._v(" "),t("h4",{attrs:{id:"层级拆分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#层级拆分"}},[a._v("#")]),a._v(" 层级拆分")]),a._v(" "),t("p",[a._v("将概念进行分组，每一组概念放在同一个格子中，并总结出一个高级别的概念作为格子标题。然后再把所有这些总结出来的格子标题作为格子内容，这样就可以确保同一个级别的概念放在同一组格子之中，同时每个格子中的要素数量在3-5个之间。")]),a._v(" "),t("h3",{attrs:{id:"字数限制-不超42字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字数限制-不超42字"}},[a._v("#")]),a._v(" 字数限制——不超42字")]),a._v(" "),t("p",[a._v("格子之中的内容要做到一目了然，因为每个格子都应当是认知的最小单位，单一格子内部不应该有更进一步的逻辑分层关系。在创作格子时需要将每个格子的内容提炼为一个短语。从经验角度格子中的字数在3-7个为最佳，最多不应超过42个。\n切忌将一整段话放入一个格子内部，这样就失去了使用格子记忆的意义。如果需要附加原文，可将原文内容放在格子说明之中。格子内部只需要保留提炼后的短语即可。")]),a._v(" "),t("h3",{attrs:{id:"结构限制-使用模板"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结构限制-使用模板"}},[a._v("#")]),a._v(" 结构限制——使用模板")]),a._v(" "),t("p",[a._v("Gridmemo虽然将知识点拆分为若干个知识要素放入不同的格子，但要素之间的逻辑关系本身也是知识的重要内容，这就需要通过格子的相对位置来呈现这种逻辑关系。\n在放格子的时候一定要不和自己的方位感相冲突。比如人在回忆过去的时候，往往会不自觉的向左边看去，说明大部分人对于过去时间的空间概念是左边。这时就要把与过去直接相关的要素放在左边的格子里面，比如事物的原因、原型等。对于更抽象的概念人们往往会说拔高、抽离，说明大部分人对于抽象的空间概念是上方。所以可以把定义、本质等相关的要素放在上面的格子。\nGridmemo内置了模板方便学习者在放置格子时参考使用，选择模版创作后挑选相应的模板，然后按照模板的位置提示写入相应的知识点要素即可。")]),a._v(" "),t("h3",{attrs:{id:"情境信息-提供线索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#情境信息-提供线索"}},[a._v("#")]),a._v(" 情境信息——提供线索")]),a._v(" "),t("p",[a._v("我们都有这样的经验，在旅途中学习到的知识往往更容易被回忆起来，有的时候我们甚至能在很多年后回忆起当时学习这个时看到的街景，这是因为大脑会把知识和学习这个知识时身体所在的情境编码在一起进行记忆。所以记忆一个知识点的时候，如果能够附加更多的情境要素将更有利于回忆。\n我们可以把一个知识的来源、学习这个知识的时间地点，当时和谁在一起，在做什么事情，甚至当时的心情都作为这个知识的情境线索记录在Gridmemo提供的格子说明之中。这样在复习的格子时就会重新回到当时创作这个格子所在的情境之中，自然更容易回忆起格子的内容。")]),a._v(" "),t("h2",{attrs:{id:"复习格子-如何把记忆唤醒"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#复习格子-如何把记忆唤醒"}},[a._v("#")]),a._v(" 复习格子——如何把记忆唤醒？")]),a._v(" "),t("p",[a._v("对于使用GridMemo的学习者来说，复习不再是枯燥机械的任务，他们可以从此摆脱遗忘算法的奴役，被自己创作的格子不断吸引，一遍又一遍地主动复习。这种主动性源于学习者在创作格子时获得的成就感，当大脑觉得自己是这个知识的创作者时，自然会更希望回味当时的灵感一现。")]),a._v(" "),t("h3",{attrs:{id:"复习什么-思路比内容更重要"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#复习什么-思路比内容更重要"}},[a._v("#")]),a._v(" 复习什么？思路比内容更重要")]),a._v(" "),t("p",[a._v("我们都有这样的经验，在背诵一首古诗时，最难的是回忆第一句，一旦回忆起来，后面的每一句都可以脱口而出。同样的，相比于零散的知识点，逻辑清晰、相互关系明确的知识往往更容易回忆。\n其实所有我们学习的知识都已经在我们的头脑中已经被存储了起来，但真正的困难在于如何将这些知识提取出来。而无论是诗词之中语句的相关性，还是学术问题之中逻辑相关性，都为我们提供了取回知识的线索。而GridMemo特有的九宫格设计不仅能够存储知识的内容，更存储了知识点之间的逻辑关系。无论是时间上的逻辑关系、空间上的逻辑关系，还是两个独立变量之间的组合关系，都可以通过特定的格子摆放方式加以体现。")]),a._v(" "),t("h3",{attrs:{id:"如何复习-看格子、翻格子、移格子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何复习-看格子、翻格子、移格子"}},[a._v("#")]),a._v(" 如何复习？看格子、翻格子、移格子")]),a._v(" "),t("p",[a._v("GridMemo为学习者提供三种复习方法，可以从三个角度加强学习者对知识的空间记忆效果，确保在学习者的头脑中形成知识内容和所在位置的强关联。可以将回忆一个知识分为以下三个步骤：")]),a._v(" "),t("ul",[t("li",[a._v("学习者看到格子的标题")]),a._v(" "),t("li",[a._v("根据标题回忆这个知识的逻辑结构")]),a._v(" "),t("li",[a._v("根据逻辑结构回忆每个结构点上的知识内容")])]),a._v(" "),t("p",[a._v("这三个步骤可以通过GridMemo的三种复习方式分别得到加强。")]),a._v(" "),t("h4",{attrs:{id:"看格子-熟悉知识点在知识体系中的定位"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#看格子-熟悉知识点在知识体系中的定位"}},[a._v("#")]),a._v(" 看格子，熟悉知识点在知识体系中的定位")]),a._v(" "),t("p",[a._v("在看格子的复习模式之中，知识点内容和所在位置同时呈现给学习者，方便学习者回顾。在这个模式中可以主动点击“隐藏”将所有卡片内容隐藏，进行主动的复习回忆。")]),a._v(" "),t("h4",{attrs:{id:"翻格子-借助知识结构再现知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#翻格子-借助知识结构再现知识"}},[a._v("#")]),a._v(" 翻格子，借助知识结构再现知识")]),a._v(" "),t("p",[a._v("翻格子的目的是强化学习者通过知识结构会议知识内容的能力。在这个模式中知识点内容默认是隐藏的，但通过深色的格子展示出这个知识点的结构。学习者可以根据格子标题和结构的提示回忆每一个结构点之上的知识内容，回忆起来或者遗忘可以点击相应的格子进行翻转，也可以直接点击“翻转”显示全部的格子。")]),a._v(" "),t("h4",{attrs:{id:"移格子-加深对知识结构的理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#移格子-加深对知识结构的理解"}},[a._v("#")]),a._v(" 移格子，加深对知识结构的理解")]),a._v(" "),t("p",[a._v("移格子的目的是是强化学习者通过根据知识内容回忆起知识结构的能力。在这个模式中，格子的初始位置是打乱的，需要用户回忆思考这个知识的的逻辑结构，然后把相应的知识点放回原位。\n但这个模式还有一个妙用，有时学习者无法回忆创作格子时使用的逻辑结构，很可能会在这个模式找到同一个知识点的另一种认知结构，从而对这个知识有了全新的认识。")]),a._v(" "),t("h3",{attrs:{id:"何时复习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#何时复习"}},[a._v("#")]),a._v(" 何时复习？")]),a._v(" "),t("p",[a._v("学习者在点击首页的复习按钮后进入复习模块，在复习模块中可以看到全部格子及自定义的分类，以及每个分类当天需要复习的格子数量。学习者点击相应的分类即可开始复习。")]),a._v(" "),t("p",[a._v("在确定复习的时间间隔时，GridMemo采用了由Open Spaced Repetition (OSR) 提出的 Free Spaced Repetition Scheduler (FSRS)算法，该算法的效果得到大量学术文献支撑。FSRS算法的原理是对每项复习内容设置一个参数R，即用户能够回忆起该内容的可能性，并将90%设定为目标值。算法根据对格子内容的熟练程度打分计算出R，并根据记忆衰退的速度设置下一次复习的时间，确保用户能够在R衰退到90%以下时进行下一次复习。\n上述原理学习者无需详细了解，只需要在复习的过程中，根据自己的格子的熟练情况点击相应的按钮即可。程序将根据熟练情况计算并将这个格子安排在之后某一天的复习计划之中。用户只需要在当天完成全部复习项目即可，如果遗漏了，项目会自动滚入第二天需复习的项目之中。")])])}),[],!1,null,null,null);t.default=v.exports}}]);